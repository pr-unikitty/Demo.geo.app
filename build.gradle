buildscript {
    repositories {
        mavenLocal()
        maven {
            url = uri('https://repo.maven.apache.org/maven2/')
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
    }
}

plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

repositories {
	mavenCentral()
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
        mavenLocal()
}

dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'io.springfox:springfox-boot-starter:3.0.0'
        // sDATA
        implementation 'com.h2database:h2'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        // JSON
        implementation 'com.fasterxml.jackson.core:jackson-core'
        implementation 'com.fasterxml.jackson.core:jackson-databind'
        implementation 'com.fasterxml.jackson.core:jackson-annotations'
        implementation 'com.google.code.gson:gson'
        // ApachPOI
        implementation 'org.apache.poi:poi:3.12'
        implementation 'org.apache.poi:poi-ooxml:3.12'
        // Tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

if (!hasProperty('mainClass')) {
    ext.mainClass = 'geo.app.Application'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}